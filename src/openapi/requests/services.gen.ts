// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { PostAuthLoginResponse, PostAuthMeResponse, PostAuthLogoutResponse, GetClientsData, GetClientsResponse, GetClientsByIdData, GetClientsByIdResponse, GetSuppliersBySuppidContactPersonsData, GetSuppliersBySuppidContactPersonsResponse, PostSuppliersBySuppidContactPersonsData, PostSuppliersBySuppidContactPersonsResponse, GetSuppliersBySuppidContactPersonsByIdData, GetSuppliersBySuppidContactPersonsByIdResponse, DeleteSuppliersBySuppidContactPersonsByIdData, DeleteSuppliersBySuppidContactPersonsByIdResponse, PatchSuppliersBySuppidContactPersonsByIdData, PatchSuppliersBySuppidContactPersonsByIdResponse, GetSuppliersResponse, PostSuppliersResponse, GetSuppliersByIdData, GetSuppliersByIdResponse, DeleteSuppliersByIdData, DeleteSuppliersByIdResponse, PatchSuppliersByIdData, PatchSuppliersByIdResponse, GetApiUsersResponse } from './types.gen';

export class AuthService {
    /**
     * Prihlasenie a ziskanie tokenu
     * @returns unknown OK
     * @throws ApiError
     */
    public static postAuthLogin(): CancelablePromise<PostAuthLoginResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/login'
        });
    }
    
    /**
     * Udaje prave prihlaseneho uzivatela
     * @returns unknown OK
     * @throws ApiError
     */
    public static postAuthMe(): CancelablePromise<PostAuthMeResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/me'
        });
    }
    
    /**
     * Odhlasenie prave prihlaseneho uzivatela
     * @returns unknown OK
     * @throws ApiError
     */
    public static postAuthLogout(): CancelablePromise<PostAuthLogoutResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/auth/logout'
        });
    }
    
}

export class KlientiService {
    /**
     * Zoznam vsetkych klientov
     * @param data The data for the request.
     * @param data.count Pocet zaznamov na jednu stranku
     * @returns unknown OK
     * @throws ApiError
     */
    public static getClients(data: GetClientsData = {}): CancelablePromise<GetClientsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/clients',
            query: {
                count: data.count
            }
        });
    }
    
    /**
     * Vrati data jedneho klienta
     * @param data The data for the request.
     * @param data.id ID klienta ktoreho data chceme ziskat
     * @returns unknown OK
     * @throws ApiError
     */
    public static getClientsById(data: GetClientsByIdData): CancelablePromise<GetClientsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/clients/{id}',
            path: {
                id: data.id
            }
        });
    }
    
}

export class KontaktneOsobyDodavatelaService {
    /**
     * Zoznam kontaktnych osob dodavatela
     * @param data The data for the request.
     * @param data.suppid ID dodavatela
     * @returns unknown OK
     * @throws ApiError
     */
    public static getSuppliersBySuppidContactPersons(data: GetSuppliersBySuppidContactPersonsData): CancelablePromise<GetSuppliersBySuppidContactPersonsResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/suppliers/{suppid}/contact-persons',
            path: {
                suppid: data.suppid
            }
        });
    }
    
    /**
     * Vytvorenie kontaktnej osoby pre konkretneho dodavatela
     * @param data The data for the request.
     * @param data.suppid ID dodavatela
     * @returns unknown OK
     * @throws ApiError
     */
    public static postSuppliersBySuppidContactPersons(data: PostSuppliersBySuppidContactPersonsData): CancelablePromise<PostSuppliersBySuppidContactPersonsResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/suppliers/{suppid}/contact-persons',
            path: {
                suppid: data.suppid
            }
        });
    }
    
    /**
     * Konkretna kontaktna osoba jedneho dodavatela
     * @param data The data for the request.
     * @param data.suppid ID dodavatela
     * @param data.id ID kontaktnej osoby
     * @returns unknown OK
     * @throws ApiError
     */
    public static getSuppliersBySuppidContactPersonsById(data: GetSuppliersBySuppidContactPersonsByIdData): CancelablePromise<GetSuppliersBySuppidContactPersonsByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/suppliers/{suppid}/contact-persons/{id}',
            path: {
                suppid: data.suppid,
                id: data.id
            }
        });
    }
    
    /**
     * Vymazanie jednej kontaktnej osoby pre konkretneho dodavatela
     * @param data The data for the request.
     * @param data.suppid ID dodavatela
     * @param data.id ID kontaktnej osoby
     * @returns unknown OK
     * @throws ApiError
     */
    public static deleteSuppliersBySuppidContactPersonsById(data: DeleteSuppliersBySuppidContactPersonsByIdData): CancelablePromise<DeleteSuppliersBySuppidContactPersonsByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/suppliers/{suppid}/contact-persons/{id}',
            path: {
                suppid: data.suppid,
                id: data.id
            }
        });
    }
    
    /**
     * Aktualizacia udajov jednej kontaktnej osoby pre konkretneho dodavatela
     * @param data The data for the request.
     * @param data.suppid ID dodavatela
     * @param data.id ID kontaktnej osoby
     * @returns unknown OK
     * @throws ApiError
     */
    public static patchSuppliersBySuppidContactPersonsById(data: PatchSuppliersBySuppidContactPersonsByIdData): CancelablePromise<PatchSuppliersBySuppidContactPersonsByIdResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/suppliers/{suppid}/contact-persons/{id}',
            path: {
                suppid: data.suppid,
                id: data.id
            }
        });
    }
    
}

export class DodavateliaService {
    /**
     * Zoznam vsetkych dodavatelov
     * @returns Suppliers OK
     * @throws ApiError
     */
    public static getSuppliers(): CancelablePromise<GetSuppliersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/suppliers'
        });
    }
    
    /**
     * Vytvorenie noveho dodavatela
     * @returns unknown OK
     * @throws ApiError
     */
    public static postSuppliers(): CancelablePromise<PostSuppliersResponse> {
        return __request(OpenAPI, {
            method: 'POST',
            url: '/suppliers'
        });
    }
    
    /**
     * Udaje jedneho dodavatela podla ID
     * @param data The data for the request.
     * @param data.id ID dodavatela
     * @returns SupplierModel OK
     * @throws ApiError
     */
    public static getSuppliersById(data: GetSuppliersByIdData): CancelablePromise<GetSuppliersByIdResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/suppliers/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * Vymazanie dodavatela podla ID
     * @param data The data for the request.
     * @param data.id ID dodavatela
     * @returns unknown OK
     * @throws ApiError
     */
    public static deleteSuppliersById(data: DeleteSuppliersByIdData): CancelablePromise<DeleteSuppliersByIdResponse> {
        return __request(OpenAPI, {
            method: 'DELETE',
            url: '/suppliers/{id}',
            path: {
                id: data.id
            }
        });
    }
    
    /**
     * Aktualizacia udajov dodavatela podla ID
     * @param data The data for the request.
     * @param data.id ID dodavatela
     * @returns unknown OK
     * @throws ApiError
     */
    public static patchSuppliersById(data: PatchSuppliersByIdData): CancelablePromise<PatchSuppliersByIdResponse> {
        return __request(OpenAPI, {
            method: 'PATCH',
            url: '/suppliers/{id}',
            path: {
                id: data.id
            }
        });
    }
    
}

export class UzivateliaService {
    /**
     * Zoznam vsetkych uzivatelov
     * @returns unknown OK
     * @throws ApiError
     */
    public static getApiUsers(): CancelablePromise<GetApiUsersResponse> {
        return __request(OpenAPI, {
            method: 'GET',
            url: '/api/users'
        });
    }
    
}